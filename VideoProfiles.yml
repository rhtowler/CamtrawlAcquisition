#  VideoPresets.yml defines preset settings profiles for encoding video
#
# VideoWriter uses subprocess to launch ffmpeg to encode video. It uses
# the image properties and the values in these profiles to create the
# appropriate command line arguments and then uses subprocess to launch
# it. Individual frames are then piped to the process.
#
# Credit for the original code to StackOverflow user Rotem:
#
#    https://stackoverflow.com/questions/61260182/how-to-output-x265-compressed-video-with-cv2-videowriter
#
# Most linux distributions ship with ffmpeg installed or at least have
# it in their official repos. Windows users will have to download it
# from https://www.ffmpeg.org/download.html.
#
# Note that you must set the ffmpeg_path in the application section of the
# YAML application config file to ensure the application can find the ffmpeg
# executable


# The default profile is used if no other profile is specified in the application
# configuration file.
default:

    # set the video encoder. This can be any video encoder listed in the output of:
    #    ffmpeg -encoders
    encoder: libx264

    # set file_ext to an extension that defines the video container type. Valid values
    # are whatever ffmpeg accepts
    file_ext:  .mkv

    # pixel_format specifies the pixel format used when encoding the video. Different
    # encoders support different pixel formats. You must specify a valid format for
    # the converter you are using.
    pixel_format: yuv420p

    # set max_frames_per_file to specify the max number of frames a video file should
    # contain. When a video file reaches this point it is closed and a new file is opened.
    max_frames_per_file: 1000

    # set ffmpeg_debug_out to True to send the output from ffmpeg to a file so you
    # can debug issues with configuring or profiling encoding. A text file named after
    # the video file with "_debug.txt" will be created in the output directory. Set
    # this to False or omit this parameter for normal use.
    ffmpeg_debug_out: False


    # The following are encoder specific parameters. You can list the encoder specific
    # parameters using ffmpeg. For example to list the parameters for libx274:
    #     ffmpeg -h encoder=libx264

    # For the libx264 encoder we'll set the preset to "fast"
    preset: fast
    # and we set the quality level for constant quality mode
    crf: 26


mjpeg:

    encoder: mjpeg
    #quality: 80
    pixel_format: yuvj420p
    file_ext:  .mkv
    max_frames_per_file: 1000
    ffmpeg_debug_out: True


x265-fast:
    encoder: libx265
    preset: fast
    crf: 26
    pixel_format: yuv420p
    file_ext:  .mkv
    max_frames_per_file: 1000
    ffmpeg_debug_out: True


# If your ffmpeg has been compiled with the --enable-nvenc option you may be able to use
# the nvidia hardware accelerated codecs for encoding video. This also requires specific
# hardware and drivers

# More information regarding the hardware and driver requirements for these codecs
#  https://developer.nvidia.com/nvidia-video-codec-sdk/download
#


# ffmpeg.exe -y -s 2048x1536 -pixel_format bgr24 -f rawvideo -r 30 -i pipe: -c:v hevc_nvenc -pix_fmt yuv420p -preset fast -crf 26 test.mp4
hevc_nvenc-fast:
    encoder: hevc_nvenc
    preset: fast
    crf: 26
    pixel_format: yuv420p
    file_ext:  .mkv
    max_frames_per_file: 1000
    ffmpeg_debug_out: True
